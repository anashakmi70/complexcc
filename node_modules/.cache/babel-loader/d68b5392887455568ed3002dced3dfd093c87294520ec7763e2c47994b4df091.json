{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Desktop/ComplexCCApp/complexcc-app/src/GameTracker.js\",\n  _s = $RefreshSig$();\n// src/GameTracker.js\nimport React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { useScoreStore } from \"./useScoreStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1\n};\nconst categories = [{\n  label: \"L6oosh\",\n  icon: /*#__PURE__*/_jsxDEV(CgCardSpades, {\n    color: \"#f87171\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"Diamonds\",\n  icon: /*#__PURE__*/_jsxDEV(FaGem, {\n    color: \"#60a5fa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 30\n  }, this)\n}, {\n  label: \"Queens\",\n  icon: /*#__PURE__*/_jsxDEV(FaChessQueen, {\n    color: \"#facc15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"King\",\n  icon: /*#__PURE__*/_jsxDEV(FaCrown, {\n    color: \"#a78bfa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 26\n  }, this)\n}];\nfunction GameTracker() {\n  _s();\n  const {\n    roundId,\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    scores,\n    setScores,\n    names,\n    setNames\n  } = useScoreStore();\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n  const roundScores = scores[roundId][gameId];\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n  };\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({\n      playerIdx,\n      catLabel,\n      doubled: false,\n      playedBy: null\n    });\n  };\n  const closeModal = () => setModalInfo(null);\n  const submitModal = () => {\n    const {\n      playerIdx,\n      catLabel,\n      doubled,\n      playedBy\n    } = modalInfo;\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n    if (cat.count < max) {\n      cat.count++;\n      cat.doubled = doubled;\n      cat.playedBy = doubled ? playedBy : null;\n    }\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    closeModal();\n  };\n  const updateCount = (playerIdx, catLabel, delta) => {\n    if (delta === 1 && [\"Queens\", \"King\"].includes(catLabel)) {\n      openModal(playerIdx, catLabel);\n      return;\n    }\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    if (cat.count === 0) {\n      cat.doubled = false;\n      cat.playedBy = null;\n    }\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n  };\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n    for (const cat of categories) {\n      const {\n        count,\n        doubled\n      } = player[cat.label];\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled ? count * -50 : count * -25;\n          break;\n        case \"King\":\n          score += doubled ? count * -150 : count * -75;\n          break;\n        default:\n          break;\n      }\n    }\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach(catName => {\n        const {\n          count,\n          doubled,\n          playedBy\n        } = other[catName];\n        const bonus = catName === \"Queens\" ? 25 : 75;\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      });\n    });\n    return score;\n  };\n  const allScores = Object.entries(scores).flatMap(([rId, games]) => Object.entries(games).map(([gId, playerData]) => ({\n    round: rId,\n    game: gId,\n    totals: playerData.map((_, idx) => calculateScore(rId, gId, idx))\n  })));\n  const goToNextGame = () => {\n    const nextGame = parseInt(gameId) === 1 ? 2 : null;\n    if (nextGame) {\n      navigate(`/round/${roundId}/game/${nextGame}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Round \", roundId, \" - Game \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: roundScores.map((playerScore, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"name-input\",\n          value: names[i],\n          onChange: e => handleNameChange(i, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: cat.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, -1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: playerScore[cat.label].count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, 1),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, cat.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [\"Total: \", calculateScore(roundId, gameId, i)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), modalInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [modalInfo.catLabel, \" Options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: modalInfo.doubled,\n            onChange: e => setModalInfo({\n              ...modalInfo,\n              doubled: e.target.checked,\n              playedBy: e.target.checked ? 0 : null\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), \"Doubled?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), modalInfo.doubled && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: modalInfo.playedBy,\n          onChange: e => setModalInfo({\n            ...modalInfo,\n            playedBy: parseInt(e.target.value)\n          }),\n          children: names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: n\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitModal,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/round/${roundId}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          children: [\"\\u2190 Back to Round \", roundId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextGame,\n        children: \"\\u2192 Next Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowScoreSheet(true),\n        children: \"\\uD83D\\uDCCA View Score Sheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), showScoreSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          maxWidth: \"90%\",\n          overflowX: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Score Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: \"100%\",\n            color: \"#fff\",\n            borderCollapse: \"collapse\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: n\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: allScores.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: entry.round\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: entry.game\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), entry.totals.map((score, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: score\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 23\n              }, this))]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowScoreSheet(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(GameTracker, \"sFz7C7ePbBnnTarDob0RTNgEMZs=\", false, function () {\n  return [useParams, useNavigate, useScoreStore];\n});\n_c = GameTracker;\nexport default GameTracker;\nvar _c;\n$RefreshReg$(_c, \"GameTracker\");","map":{"version":3,"names":["React","useState","useParams","Link","useNavigate","FaGem","FaCrown","FaChessQueen","CgCardSpades","useScoreStore","jsxDEV","_jsxDEV","maxValues","L6oosh","Diamonds","Queens","King","categories","label","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","GameTracker","_s","roundId","gameId","navigate","scores","setScores","names","setNames","modalInfo","setModalInfo","showScoreSheet","setShowScoreSheet","roundScores","handleNameChange","index","value","updated","openModal","playerIdx","catLabel","doubled","playedBy","closeModal","submitModal","newScores","player","cat","max","count","updateCount","delta","includes","Math","min","calculateScore","rId","gId","score","forEach","other","idx","catName","bonus","allScores","Object","entries","flatMap","games","map","playerData","round","game","totals","_","goToNextGame","nextGame","parseInt","className","children","playerScore","i","onChange","e","target","onClick","type","checked","n","style","marginTop","display","gap","flexWrap","justifyContent","to","maxWidth","overflowX","width","borderCollapse","entry","padding","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Desktop/ComplexCCApp/complexcc-app/src/GameTracker.js"],"sourcesContent":["// src/GameTracker.js\nimport React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { useScoreStore } from \"./useScoreStore\";\n\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1,\n};\n\nconst categories = [\n  { label: \"L6oosh\", icon: <CgCardSpades color=\"#f87171\" /> },\n  { label: \"Diamonds\", icon: <FaGem color=\"#60a5fa\" /> },\n  { label: \"Queens\", icon: <FaChessQueen color=\"#facc15\" /> },\n  { label: \"King\", icon: <FaCrown color=\"#a78bfa\" /> },\n];\n\nfunction GameTracker() {\n  const { roundId, gameId } = useParams();\n  const navigate = useNavigate();\n  const { scores, setScores, names, setNames } = useScoreStore();\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n\n  const roundScores = scores[roundId][gameId];\n\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n  };\n\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({ playerIdx, catLabel, doubled: false, playedBy: null });\n  };\n\n  const closeModal = () => setModalInfo(null);\n\n  const submitModal = () => {\n    const { playerIdx, catLabel, doubled, playedBy } = modalInfo;\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n\n    if (cat.count < max) {\n      cat.count++;\n      cat.doubled = doubled;\n      cat.playedBy = doubled ? playedBy : null;\n    }\n\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    closeModal();\n  };\n\n  const updateCount = (playerIdx, catLabel, delta) => {\n    if (delta === 1 && [\"Queens\", \"King\"].includes(catLabel)) {\n      openModal(playerIdx, catLabel);\n      return;\n    }\n\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n\n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    if (cat.count === 0) {\n      cat.doubled = false;\n      cat.playedBy = null;\n    }\n\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n  };\n\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n\n    for (const cat of categories) {\n      const { count, doubled } = player[cat.label];\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled ? count * -50 : count * -25;\n          break;\n        case \"King\":\n          score += doubled ? count * -150 : count * -75;\n          break;\n        default:\n          break;\n      }\n    }\n\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach((catName) => {\n        const { count, doubled, playedBy } = other[catName];\n        const bonus = catName === \"Queens\" ? 25 : 75;\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      });\n    });\n\n    return score;\n  };\n\n  const allScores = Object.entries(scores).flatMap(([rId, games]) =>\n    Object.entries(games).map(([gId, playerData]) => ({\n      round: rId,\n      game: gId,\n      totals: playerData.map((_, idx) => calculateScore(rId, gId, idx)),\n    }))\n  );\n\n  const goToNextGame = () => {\n    const nextGame = parseInt(gameId) === 1 ? 2 : null;\n    if (nextGame) {\n      navigate(`/round/${roundId}/game/${nextGame}`);\n    }\n  };\n\n  return (\n    <div className=\"counter-page\">\n      <h2>Round {roundId} - Game {gameId}</h2>\n      <div className=\"players-grid\">\n        {roundScores.map((playerScore, i) => (\n          <div key={i} className=\"player-card\">\n            <input\n              className=\"name-input\"\n              value={names[i]}\n              onChange={(e) => handleNameChange(i, e.target.value)}\n            />\n            {categories.map((cat) => (\n              <div key={cat.label} className=\"controls\">\n                <span>{cat.icon}</span>\n                <button onClick={() => updateCount(i, cat.label, -1)}>-</button>\n                <span>{playerScore[cat.label].count}</span>\n                <button onClick={() => updateCount(i, cat.label, 1)}>+</button>\n              </div>\n            ))}\n            <div className=\"score-display\">Total: {calculateScore(roundId, gameId, i)}</div>\n          </div>\n        ))}\n      </div>\n\n      {modalInfo && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>{modalInfo.catLabel} Options</h3>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={modalInfo.doubled}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    doubled: e.target.checked,\n                    playedBy: e.target.checked ? 0 : null,\n                  })\n                }\n              />\n              Doubled?\n            </label>\n            {modalInfo.doubled && (\n              <select\n                value={modalInfo.playedBy}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    playedBy: parseInt(e.target.value),\n                  })\n                }\n              >\n                {names.map((n, idx) => (\n                  <option key={idx} value={idx}>\n                    {n}\n                  </option>\n                ))}\n              </select>\n            )}\n            <button onClick={submitModal}>Confirm</button>\n            <button onClick={closeModal}>Cancel</button>\n          </div>\n        </div>\n      )}\n\n      <div style={{ marginTop: \"20px\", display: \"flex\", gap: \"10px\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n        <Link to={`/round/${roundId}`}>\n          <button className=\"back-btn\">← Back to Round {roundId}</button>\n        </Link>\n        <button onClick={goToNextGame}>→ Next Game</button>\n        <button onClick={() => setShowScoreSheet(true)}>📊 View Score Sheet</button>\n      </div>\n\n      {showScoreSheet && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\" style={{ maxWidth: \"90%\", overflowX: \"auto\" }}>\n            <h3>Score Sheet</h3>\n            <table style={{ width: \"100%\", color: \"#fff\", borderCollapse: \"collapse\" }}>\n              <thead>\n                <tr>\n                  <th>Round</th>\n                  <th>Game</th>\n                  {names.map((n, idx) => (\n                    <th key={idx}>{n}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {allScores.map((entry, idx) => (\n                  <tr key={idx}>\n                    <td style={{ padding: \"4px 8px\" }}>{entry.round}</td>\n                    <td style={{ padding: \"4px 8px\" }}>{entry.game}</td>\n                    {entry.totals.map((score, i) => (\n                      <td key={i} style={{ padding: \"4px 8px\" }}>{score}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button onClick={() => setShowScoreSheet(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}