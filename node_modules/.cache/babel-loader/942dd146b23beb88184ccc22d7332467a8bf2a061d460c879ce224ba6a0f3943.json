{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Documents/GitHub/complexcc/src/GameTracker.js\",\n  _s = $RefreshSig$();\n// src/GameTracker.js\nimport React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { useScoreStore } from \"./useScoreStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1\n};\nconst categories = [{\n  label: \"L6oosh\",\n  icon: /*#__PURE__*/_jsxDEV(CgCardSpades, {\n    color: \"#f87171\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"Diamonds\",\n  icon: /*#__PURE__*/_jsxDEV(FaGem, {\n    color: \"#60a5fa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 30\n  }, this)\n}, {\n  label: \"Queens\",\n  icon: /*#__PURE__*/_jsxDEV(FaChessQueen, {\n    color: \"#facc15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"King\",\n  icon: /*#__PURE__*/_jsxDEV(FaCrown, {\n    color: \"#a78bfa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 26\n  }, this)\n}];\nfunction GameTracker() {\n  _s();\n  const {\n    roundId,\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    scores,\n    setScores,\n    names,\n    setNames\n  } = useScoreStore();\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n  const roundScores = scores[roundId][gameId];\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n  };\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({\n      playerIdx,\n      catLabel,\n      doubled: false,\n      playedBy: -1\n    });\n  };\n  const closeModal = () => setModalInfo(null);\n  const submitModal = () => {\n    const {\n      playerIdx,\n      catLabel,\n      doubled,\n      playedBy\n    } = modalInfo;\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const max = maxValues[catLabel];\n    const currentCards = player[playerIdx][catLabel];\n    const totalUsed = player.reduce((sum, p) => sum + p[catLabel].length, 0);\n    if (totalUsed >= max) {\n      closeModal();\n      return;\n    }\n    const newCard = {\n      doubled,\n      playedBy: doubled && playedBy !== -1 ? playedBy : null\n    };\n    currentCards.push(newCard);\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    closeModal();\n  };\n  const cardsLeft = () => {\n    const playerData = scores[roundId][gameId];\n    const left = {};\n    categories.forEach(({\n      label\n    }) => {\n      const totalUsed = playerData.reduce((sum, p) => sum + p[label].length, 0);\n      left[label] = maxValues[label] - totalUsed;\n    });\n    return left;\n  };\n  const updateCount = (playerIdx, catLabel, delta) => {\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const currentCards = player[playerIdx][catLabel];\n    if (delta === 1) {\n      if ([\"Queens\", \"King\"].includes(catLabel)) {\n        openModal(playerIdx, catLabel);\n        return;\n      }\n      const totalUsed = player.reduce((sum, p) => sum + p[catLabel].length, 0);\n      if (totalUsed >= maxValues[catLabel]) return;\n      currentCards.push({});\n    } else {\n      if (currentCards.length > 0) currentCards.pop();\n    }\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n  };\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n    for (const cat of categories) {\n      const cards = player[cat.label];\n      cards.forEach(card => {\n        switch (cat.label) {\n          case \"L6oosh\":\n            score += -15;\n            break;\n          case \"Diamonds\":\n            score += -10;\n            break;\n          case \"Queens\":\n            score += card.doubled ? -50 : -25;\n            break;\n          case \"King\":\n            score += card.doubled ? -150 : -75;\n            break;\n          default:\n            break;\n        }\n      });\n    }\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach(catLabel => {\n        const cards = other[catLabel];\n        cards.forEach(card => {\n          const bonus = catLabel === \"Queens\" ? 25 : 75;\n          if (card.doubled && card.playedBy === playerIdx) {\n            score += bonus;\n          }\n        });\n      });\n    });\n    return score;\n  };\n  const calculateCumulativeScore = playerIdx => {\n    let totalScore = 0;\n    const sortedRounds = Object.keys(scores).sort((a, b) => parseInt(a) - parseInt(b));\n    for (const rId of sortedRounds) {\n      const games = scores[rId];\n      const sortedGames = Object.keys(games).sort((a, b) => parseInt(a) - parseInt(b));\n      for (const gId of sortedGames) {\n        if (parseInt(rId) < parseInt(roundId) || parseInt(rId) === parseInt(roundId) && parseInt(gId) <= parseInt(gameId)) {\n          totalScore += calculateScore(rId, gId, playerIdx);\n        }\n      }\n    }\n    return totalScore;\n  };\n  const allScores = Object.entries(scores).flatMap(([rId, games]) => Object.entries(games).map(([gId, playerData]) => ({\n    round: rId,\n    game: gId,\n    totals: playerData.map((_, idx) => calculateScore(rId, gId, idx))\n  })));\n  const goToNextGame = () => {\n    const currentRound = parseInt(roundId);\n    const currentGame = parseInt(gameId);\n    if (currentGame === 1) {\n      navigate(`/round/${currentRound}/game/2`);\n    } else if (currentGame === 2 && currentRound < 4) {\n      navigate(`/round/${currentRound + 1}/game/1`);\n    } else {\n      alert(\"🎉 You've completed all rounds!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Round \", roundId, \" - Game \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: roundScores.map((playerScore, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"name-input\",\n          value: names[i],\n          onChange: e => handleNameChange(i, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: cat.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, -1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: playerScore[cat.label].length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, 1),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this)]\n        }, cat.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [\"Total: \", calculateCumulativeScore(i)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), modalInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [modalInfo.catLabel, \" Options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: modalInfo.doubled,\n            onChange: e => setModalInfo({\n              ...modalInfo,\n              doubled: e.target.checked,\n              playedBy: e.target.checked ? -1 : null\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), \"Doubled?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), modalInfo.doubled && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: modalInfo.playedBy,\n          onChange: e => setModalInfo({\n            ...modalInfo,\n            playedBy: parseInt(e.target.value)\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: -1,\n            children: \"No one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: n\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitModal,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 10,\n        right: 10,\n        backgroundColor: \"#222\",\n        color: \"#eee\",\n        padding: \"8px 12px\",\n        borderRadius: \"8px\",\n        fontSize: \"0.9rem\",\n        zIndex: 1000,\n        boxShadow: \"0 0 8px rgba(0,0,0,0.5)\"\n      },\n      children: Object.entries(cardsLeft()).map(([cat, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: count === 0 ? 'red' : 'inherit',\n            fontWeight: count === 0 ? 'bold' : 'normal'\n          },\n          children: cat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), \": \", count]\n      }, cat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/round/${roundId}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          children: [\"\\u2190 Back to Round \", roundId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextGame,\n        children: \"\\u2192 Next Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowScoreSheet(true),\n        children: \"\\uD83D\\uDCCA View Score Sheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), showScoreSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          maxWidth: \"90%\",\n          overflowX: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Score Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: \"100%\",\n            color: \"#fff\",\n            borderCollapse: \"collapse\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: n\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: allScores.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: [\"Round \", entry.round, \" - Game \", entry.game]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), entry.totals.map((score, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: score\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this))]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowScoreSheet(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(GameTracker, \"sFz7C7ePbBnnTarDob0RTNgEMZs=\", false, function () {\n  return [useParams, useNavigate, useScoreStore];\n});\n_c = GameTracker;\nexport default GameTracker;\nvar _c;\n$RefreshReg$(_c, \"GameTracker\");","map":{"version":3,"names":["React","useState","useParams","Link","useNavigate","FaGem","FaCrown","FaChessQueen","CgCardSpades","useScoreStore","jsxDEV","_jsxDEV","maxValues","L6oosh","Diamonds","Queens","King","categories","label","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","GameTracker","_s","roundId","gameId","navigate","scores","setScores","names","setNames","modalInfo","setModalInfo","showScoreSheet","setShowScoreSheet","roundScores","handleNameChange","index","value","updated","openModal","playerIdx","catLabel","doubled","playedBy","closeModal","submitModal","newScores","player","max","currentCards","totalUsed","reduce","sum","p","length","newCard","push","cardsLeft","playerData","left","forEach","updateCount","delta","includes","pop","calculateScore","rId","gId","score","cat","cards","card","other","idx","bonus","calculateCumulativeScore","totalScore","sortedRounds","Object","keys","sort","a","b","parseInt","games","sortedGames","allScores","entries","flatMap","map","round","game","totals","_","goToNextGame","currentRound","currentGame","alert","className","children","playerScore","i","onChange","e","target","onClick","type","checked","n","style","position","top","right","backgroundColor","padding","borderRadius","fontSize","zIndex","boxShadow","count","marginBottom","fontWeight","marginTop","display","gap","flexWrap","justifyContent","to","maxWidth","overflowX","width","borderCollapse","entry","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Documents/GitHub/complexcc/src/GameTracker.js"],"sourcesContent":["// src/GameTracker.js\nimport React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { useScoreStore } from \"./useScoreStore\";\n\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1,\n};\n\nconst categories = [\n  { label: \"L6oosh\", icon: <CgCardSpades color=\"#f87171\" /> },\n  { label: \"Diamonds\", icon: <FaGem color=\"#60a5fa\" /> },\n  { label: \"Queens\", icon: <FaChessQueen color=\"#facc15\" /> },\n  { label: \"King\", icon: <FaCrown color=\"#a78bfa\" /> },\n];\n\nfunction GameTracker() {\n  const { roundId, gameId } = useParams();\n  const navigate = useNavigate();\n  const { scores, setScores, names, setNames } = useScoreStore();\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n\n  const roundScores = scores[roundId][gameId];\n\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n  };\n\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({ playerIdx, catLabel, doubled: false, playedBy: -1 });\n  };\n\n  const closeModal = () => setModalInfo(null);\n\n  const submitModal = () => {\n    const { playerIdx, catLabel, doubled, playedBy } = modalInfo;\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const max = maxValues[catLabel];\n\n    const currentCards = player[playerIdx][catLabel];\n    const totalUsed = player.reduce((sum, p) => sum + p[catLabel].length, 0);\n\n    if (totalUsed >= max) {\n      closeModal();\n      return;\n    }\n\n    const newCard = {\n      doubled,\n      playedBy: doubled && playedBy !== -1 ? playedBy : null,\n    };\n    currentCards.push(newCard);\n\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    closeModal();\n  };\n\n  const cardsLeft = () => {\n    const playerData = scores[roundId][gameId];\n    const left = {};\n    categories.forEach(({ label }) => {\n      const totalUsed = playerData.reduce((sum, p) => sum + p[label].length, 0);\n      left[label] = maxValues[label] - totalUsed;\n    });\n    return left;\n  };\n\n  const updateCount = (playerIdx, catLabel, delta) => {\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const currentCards = player[playerIdx][catLabel];\n\n    if (delta === 1) {\n      if ([\"Queens\", \"King\"].includes(catLabel)) {\n        openModal(playerIdx, catLabel);\n        return;\n      }\n      const totalUsed = player.reduce((sum, p) => sum + p[catLabel].length, 0);\n      if (totalUsed >= maxValues[catLabel]) return;\n      currentCards.push({});\n    } else {\n      if (currentCards.length > 0) currentCards.pop();\n    }\n\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n  };\n\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n\n    for (const cat of categories) {\n      const cards = player[cat.label];\n      cards.forEach((card) => {\n        switch (cat.label) {\n          case \"L6oosh\":\n            score += -15;\n            break;\n          case \"Diamonds\":\n            score += -10;\n            break;\n          case \"Queens\":\n            score += card.doubled ? -50 : -25;\n            break;\n          case \"King\":\n            score += card.doubled ? -150 : -75;\n            break;\n          default:\n            break;\n        }\n      });\n    }\n\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach((catLabel) => {\n        const cards = other[catLabel];\n        cards.forEach((card) => {\n          const bonus = catLabel === \"Queens\" ? 25 : 75;\n          if (card.doubled && card.playedBy === playerIdx) {\n            score += bonus;\n          }\n        });\n      });\n    });\n\n    return score;\n  };\n\n  const calculateCumulativeScore = (playerIdx) => {\n    let totalScore = 0;\n    const sortedRounds = Object.keys(scores).sort((a, b) => parseInt(a) - parseInt(b));\n    for (const rId of sortedRounds) {\n      const games = scores[rId];\n      const sortedGames = Object.keys(games).sort((a, b) => parseInt(a) - parseInt(b));\n      for (const gId of sortedGames) {\n        if (\n          parseInt(rId) < parseInt(roundId) ||\n          (parseInt(rId) === parseInt(roundId) && parseInt(gId) <= parseInt(gameId))\n        ) {\n          totalScore += calculateScore(rId, gId, playerIdx);\n        }\n      }\n    }\n    return totalScore;\n  };\n\n  const allScores = Object.entries(scores).flatMap(([rId, games]) =>\n    Object.entries(games).map(([gId, playerData]) => ({\n      round: rId,\n      game: gId,\n      totals: playerData.map((_, idx) => calculateScore(rId, gId, idx)),\n    }))\n  );\n\n  const goToNextGame = () => {\n    const currentRound = parseInt(roundId);\n    const currentGame = parseInt(gameId);\n    if (currentGame === 1) {\n      navigate(`/round/${currentRound}/game/2`);\n    } else if (currentGame === 2 && currentRound < 4) {\n      navigate(`/round/${currentRound + 1}/game/1`);\n    } else {\n      alert(\"🎉 You've completed all rounds!\");\n    }\n  };\n\n  return (\n    <div className=\"counter-page\">\n      <h2>Round {roundId} - Game {gameId}</h2>\n      <div className=\"players-grid\">\n        {roundScores.map((playerScore, i) => (\n          <div key={i} className=\"player-card\">\n            <input\n              className=\"name-input\"\n              value={names[i]}\n              onChange={(e) => handleNameChange(i, e.target.value)}\n            />\n            {categories.map((cat) => (\n              <div key={cat.label} className=\"controls\">\n                <span>{cat.icon}</span>\n                <button onClick={() => updateCount(i, cat.label, -1)}>-</button>\n                <span>{playerScore[cat.label].length}</span>\n                <button onClick={() => updateCount(i, cat.label, 1)}>+</button>\n              </div>\n            ))}\n            <div className=\"score-display\">Total: {calculateCumulativeScore(i)}</div>\n          </div>\n        ))}\n      </div>\n\n      {modalInfo && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>{modalInfo.catLabel} Options</h3>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={modalInfo.doubled}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    doubled: e.target.checked,\n                    playedBy: e.target.checked ? -1 : null,\n                  })\n                }\n              />\n              Doubled?\n            </label>\n            {modalInfo.doubled && (\n              <select\n                value={modalInfo.playedBy}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    playedBy: parseInt(e.target.value),\n                  })\n                }\n              >\n                <option value={-1}>No one</option>\n                {names.map((n, idx) => (\n                  <option key={idx} value={idx}>{n}</option>\n                ))}\n              </select>\n            )}\n            <button onClick={submitModal}>Confirm</button>\n            <button onClick={closeModal}>Cancel</button>\n          </div>\n        </div>\n      )}\n\n      <div style={{\n        position: \"fixed\",\n        top: 10,\n        right: 10,\n        backgroundColor: \"#222\",\n        color: \"#eee\",\n        padding: \"8px 12px\",\n        borderRadius: \"8px\",\n        fontSize: \"0.9rem\",\n        zIndex: 1000,\n        boxShadow: \"0 0 8px rgba(0,0,0,0.5)\"\n      }}>\n        {Object.entries(cardsLeft()).map(([cat, count]) => (\n          <div key={cat} style={{ marginBottom: 4 }}>\n            <span style={{ color: count === 0 ? 'red' : 'inherit', fontWeight: count === 0 ? 'bold' : 'normal' }}>\n              {cat}\n            </span>: {count}\n          </div>\n        ))}\n      </div>\n\n      <div style={{\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n      }}>\n        <Link to={`/round/${roundId}`}>\n          <button className=\"back-btn\">← Back to Round {roundId}</button>\n        </Link>\n        <button onClick={goToNextGame}>→ Next Game</button>\n        <button onClick={() => setShowScoreSheet(true)}>📊 View Score Sheet</button>\n      </div>\n\n      {showScoreSheet && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\" style={{ maxWidth: \"90%\", overflowX: \"auto\" }}>\n            <h3>Score Sheet</h3>\n            <table style={{ width: \"100%\", color: \"#fff\", borderCollapse: \"collapse\" }}>\n              <thead>\n                <tr>\n                  <th>Game</th>\n                  {names.map((n, idx) => (\n                    <th key={idx}>{n}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {allScores.map((entry, idx) => (\n                  <tr key={idx}>\n                    <td style={{ padding: \"4px 8px\" }}>\n                      Round {entry.round} - Game {entry.game}\n                    </td>\n                    {entry.totals.map((score, i) => (\n                      <td key={i} style={{ padding: \"4px 8px\" }}>{score}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button onClick={() => setShowScoreSheet(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}