{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Documents/GitHub/complexcc/src/components/PlayerInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DoublePopup from './DoublePopup';\nimport './PlayerInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardTypes = ['l6oosh', 'diamonds', 'queens', 'kings'];\nfunction PlayerInput({\n  mode,\n  scores,\n  setScores,\n  rounds,\n  setRounds,\n  cardCounts,\n  setCardCounts,\n  playerNames\n}) {\n  _s();\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const handleCard = (type, player, operation) => {\n    if ((type === 'queens' || type === 'kings') && operation === 'add') {\n      setSelectedCard(type);\n      setSelectedPlayer(player);\n    } else {\n      updateScore(type, player, operation);\n    }\n  };\n  const updateScore = (type, player, operation, doubled = false, dealer = null) => {\n    const newScores = {\n      ...scores\n    };\n    const modifier = operation === 'remove' ? -1 : 1;\n    const points = getPoints(type, doubled, player, dealer);\n    newScores[player] = (newScores[player] || 0) + (points[player] || 0) * modifier;\n    if (dealer && dealer !== player) {\n      newScores[dealer] = (newScores[dealer] || 0) + (points[dealer] || 0) * modifier;\n    }\n    const newCounts = {\n      ...cardCounts\n    };\n    if (type === 'l6oosh' || type === 'diamonds') {\n      newCounts[type] = Math.max(0, newCounts[type] + modifier);\n    } else {\n      const cardList = [...newCounts[type]];\n      if (operation === 'add') {\n        cardList.push({\n          player,\n          doubled,\n          dealer\n        });\n      } else {\n        const idx = cardList.findIndex(c => c.player === player);\n        if (idx !== -1) cardList.splice(idx, 1);\n      }\n      newCounts[type] = cardList;\n    }\n    setScores(newScores);\n    setCardCounts(newCounts);\n    setSelectedCard(null);\n    setSelectedPlayer(null);\n  };\n  const getPoints = (type, doubled, eater, dealer) => {\n    const base = {\n      l6oosh: -15,\n      diamonds: -10,\n      queens: doubled ? -50 : -25,\n      kings: doubled ? -150 : -75\n    };\n    const dealerBonus = {\n      queens: 25,\n      kings: 75\n    };\n    const points = {\n      [eater]: base[type]\n    };\n    if (doubled && dealer && dealer !== eater) {\n      points[dealer] = dealerBonus[type];\n    }\n    return points;\n  };\n  const renderButtons = player => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-grid\",\n    children: cardTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-grid-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCard(type, player, 'remove'),\n        children: [\"\\u2212 \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCard(type, player, 'add'),\n        children: [\"+ \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, type, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-grid\",\n    children: [playerNames.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), renderButtons(player), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \", scores[player] || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)), selectedCard && /*#__PURE__*/_jsxDEV(DoublePopup, {\n      type: selectedCard,\n      player: selectedPlayer,\n      players: playerNames,\n      onSubmit: (doubled, dealer) => updateScore(selectedCard, selectedPlayer, 'add', doubled, dealer),\n      onClose: () => {\n        setSelectedCard(null);\n        setSelectedPlayer(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerInput, \"fAEEG6FrxgizSZgVhYW3F1YIHhE=\");\n_c = PlayerInput;\nexport default PlayerInput;\nvar _c;\n$RefreshReg$(_c, \"PlayerInput\");","map":{"version":3,"names":["React","useState","DoublePopup","jsxDEV","_jsxDEV","cardTypes","PlayerInput","mode","scores","setScores","rounds","setRounds","cardCounts","setCardCounts","playerNames","_s","selectedCard","setSelectedCard","selectedPlayer","setSelectedPlayer","handleCard","type","player","operation","updateScore","doubled","dealer","newScores","modifier","points","getPoints","newCounts","Math","max","cardList","push","idx","findIndex","c","splice","eater","base","l6oosh","diamonds","queens","kings","dealerBonus","renderButtons","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","players","onSubmit","onClose","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Documents/GitHub/complexcc/src/components/PlayerInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DoublePopup from './DoublePopup';\nimport './PlayerInput.css';\n\nconst cardTypes = ['l6oosh', 'diamonds', 'queens', 'kings'];\n\nfunction PlayerInput({ mode, scores, setScores, rounds, setRounds, cardCounts, setCardCounts, playerNames }) {\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n\n  const handleCard = (type, player, operation) => {\n    if ((type === 'queens' || type === 'kings') && operation === 'add') {\n      setSelectedCard(type);\n      setSelectedPlayer(player);\n    } else {\n      updateScore(type, player, operation);\n    }\n  };\n\n  const updateScore = (type, player, operation, doubled = false, dealer = null) => {\n    const newScores = { ...scores };\n    const modifier = operation === 'remove' ? -1 : 1;\n    const points = getPoints(type, doubled, player, dealer);\n    newScores[player] = (newScores[player] || 0) + (points[player] || 0) * modifier;\n    if (dealer && dealer !== player) {\n      newScores[dealer] = (newScores[dealer] || 0) + (points[dealer] || 0) * modifier;\n    }\n\n    const newCounts = { ...cardCounts };\n\n    if (type === 'l6oosh' || type === 'diamonds') {\n      newCounts[type] = Math.max(0, newCounts[type] + modifier);\n    } else {\n      const cardList = [...newCounts[type]];\n      if (operation === 'add') {\n        cardList.push({ player, doubled, dealer });\n      } else {\n        const idx = cardList.findIndex(c => c.player === player);\n        if (idx !== -1) cardList.splice(idx, 1);\n      }\n      newCounts[type] = cardList;\n    }\n\n    setScores(newScores);\n    setCardCounts(newCounts);\n    setSelectedCard(null);\n    setSelectedPlayer(null);\n  };\n\n  const getPoints = (type, doubled, eater, dealer) => {\n    const base = {\n      l6oosh: -15,\n      diamonds: -10,\n      queens: doubled ? -50 : -25,\n      kings: doubled ? -150 : -75,\n    };\n    const dealerBonus = {\n      queens: 25,\n      kings: 75,\n    };\n    const points = { [eater]: base[type] };\n    if (doubled && dealer && dealer !== eater) {\n      points[dealer] = dealerBonus[type];\n    }\n    return points;\n  };\n\n  const renderButtons = (player) => (\n    <div className=\"button-grid\">\n      {cardTypes.map(type => (\n        <div className=\"button-grid-row\" key={type}>\n          <button onClick={() => handleCard(type, player, 'remove')}>âˆ’ {type}</button>\n          <button onClick={() => handleCard(type, player, 'add')}>+ {type}</button>\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"player-grid\">\n      {playerNames.map((player, index) => (\n        <div key={index} className=\"player-box\">\n          <h3>{player}</h3>\n          {renderButtons(player)}\n          <p>Total: {scores[player] || 0}</p>\n        </div>\n      ))}\n      {selectedCard && (\n        <DoublePopup\n          type={selectedCard}\n          player={selectedPlayer}\n          players={playerNames}\n          onSubmit={(doubled, dealer) =>\n            updateScore(selectedCard, selectedPlayer, 'add', doubled, dealer)\n          }\n          onClose={() => {\n            setSelectedCard(null);\n            setSelectedPlayer(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default PlayerInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}