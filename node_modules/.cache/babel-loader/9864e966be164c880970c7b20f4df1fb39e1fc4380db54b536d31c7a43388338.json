{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Documents/GitHub/complexcc/src/components/GamePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PlayerInput from './PlayerInput';\nimport ScoreSheet from './ScoreSheet';\nimport CardCounter from './CardCounter';\nimport './GamePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst roundNames = ['Complex 1.1', 'Complex 1.2', 'Complex 2.1', 'Complex 2.2', 'Complex 3.1', 'Complex 3.2', 'Complex 4.1', 'Complex 4.2'];\nfunction GamePage({\n  mode,\n  playerNames,\n  scores,\n  setScores,\n  rounds,\n  setRounds,\n  cardCounts,\n  setCardCounts,\n  goHome\n}) {\n  _s();\n  const [roundIndex, setRoundIndex] = useState(0);\n  const [showSheet, setShowSheet] = useState(false);\n  const [roundCardCounts, setRoundCardCounts] = useState({}); // saves cardCounts per round\n\n  const saveCurrentRound = () => {\n    const updatedRounds = {\n      ...rounds\n    };\n    const updatedCardCounts = {\n      ...roundCardCounts\n    };\n    updatedRounds[roundNames[roundIndex]] = {\n      ...scores\n    };\n    updatedCardCounts[roundNames[roundIndex]] = JSON.parse(JSON.stringify(cardCounts)); // deep copy\n\n    setRounds(updatedRounds);\n    setRoundCardCounts(updatedCardCounts);\n  };\n  const loadRound = index => {\n    const name = roundNames[index];\n    const roundScores = rounds[name] || {};\n    const roundCards = roundCardCounts[name] || {\n      l6oosh: 0,\n      diamonds: 0,\n      queens: [],\n      kings: []\n    };\n    setScores({\n      ...roundScores\n    });\n    setCardCounts(JSON.parse(JSON.stringify(roundCards)));\n  };\n  const nextRound = () => {\n    if (roundIndex < roundNames.length - 1) {\n      saveCurrentRound();\n      const nextIndex = roundIndex + 1;\n      setRoundIndex(nextIndex);\n      loadRound(nextIndex);\n    }\n  };\n  const previousRound = () => {\n    if (roundIndex > 0) {\n      saveCurrentRound();\n      const prevIndex = roundIndex - 1;\n      setRoundIndex(prevIndex);\n      loadRound(prevIndex);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(CardCounter, {\n      cardCounts: cardCounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back\",\n      onClick: goHome,\n      children: \"\\u2190 Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: roundNames[roundIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayerInput, {\n      mode: mode,\n      scores: scores,\n      setScores: setScores,\n      rounds: rounds,\n      setRounds: setRounds,\n      cardCounts: cardCounts,\n      setCardCounts: setCardCounts,\n      playerNames: playerNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previousRound,\n        children: \"Previous Round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"score-sheet-button\",\n        onClick: () => setShowSheet(true),\n        children: \"Score Sheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextRound,\n        children: \"Next Round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), showSheet && /*#__PURE__*/_jsxDEV(ScoreSheet, {\n      rounds: rounds,\n      onClose: () => setShowSheet(false),\n      players: playerNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"DjoOS+fLkW2QO9enrfecH3iyyIM=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","PlayerInput","ScoreSheet","CardCounter","jsxDEV","_jsxDEV","roundNames","GamePage","mode","playerNames","scores","setScores","rounds","setRounds","cardCounts","setCardCounts","goHome","_s","roundIndex","setRoundIndex","showSheet","setShowSheet","roundCardCounts","setRoundCardCounts","saveCurrentRound","updatedRounds","updatedCardCounts","JSON","parse","stringify","loadRound","index","name","roundScores","roundCards","l6oosh","diamonds","queens","kings","nextRound","length","nextIndex","previousRound","prevIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","players","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Documents/GitHub/complexcc/src/components/GamePage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PlayerInput from './PlayerInput';\nimport ScoreSheet from './ScoreSheet';\nimport CardCounter from './CardCounter';\nimport './GamePage.css';\n\nconst roundNames = [\n  'Complex 1.1', 'Complex 1.2', 'Complex 2.1', 'Complex 2.2',\n  'Complex 3.1', 'Complex 3.2', 'Complex 4.1', 'Complex 4.2',\n];\n\nfunction GamePage({ mode, playerNames, scores, setScores, rounds, setRounds, cardCounts, setCardCounts, goHome }) {\n  const [roundIndex, setRoundIndex] = useState(0);\n  const [showSheet, setShowSheet] = useState(false);\n  const [roundCardCounts, setRoundCardCounts] = useState({}); // saves cardCounts per round\n\n  const saveCurrentRound = () => {\n    const updatedRounds = { ...rounds };\n    const updatedCardCounts = { ...roundCardCounts };\n\n    updatedRounds[roundNames[roundIndex]] = { ...scores };\n    updatedCardCounts[roundNames[roundIndex]] = JSON.parse(JSON.stringify(cardCounts)); // deep copy\n\n    setRounds(updatedRounds);\n    setRoundCardCounts(updatedCardCounts);\n  };\n\n  const loadRound = (index) => {\n    const name = roundNames[index];\n    const roundScores = rounds[name] || {};\n    const roundCards = roundCardCounts[name] || {\n      l6oosh: 0,\n      diamonds: 0,\n      queens: [],\n      kings: [],\n    };\n\n    setScores({ ...roundScores });\n    setCardCounts(JSON.parse(JSON.stringify(roundCards)));\n  };\n\n  const nextRound = () => {\n    if (roundIndex < roundNames.length - 1) {\n      saveCurrentRound();\n      const nextIndex = roundIndex + 1;\n      setRoundIndex(nextIndex);\n      loadRound(nextIndex);\n    }\n  };\n\n  const previousRound = () => {\n    if (roundIndex > 0) {\n      saveCurrentRound();\n      const prevIndex = roundIndex - 1;\n      setRoundIndex(prevIndex);\n      loadRound(prevIndex);\n    }\n  };\n\n  return (\n    <div className=\"game-page\">\n      <CardCounter cardCounts={cardCounts} />\n      <button className=\"back\" onClick={goHome}>‚Üê Home</button>\n      <h2>{roundNames[roundIndex]}</h2>\n      <PlayerInput\n        mode={mode}\n        scores={scores}\n        setScores={setScores}\n        rounds={rounds}\n        setRounds={setRounds}\n        cardCounts={cardCounts}\n        setCardCounts={setCardCounts}\n        playerNames={playerNames}\n      />\n      <div className=\"bottom-buttons\">\n        <button onClick={previousRound}>Previous Round</button>\n        <button className=\"score-sheet-button\" onClick={() => setShowSheet(true)}>Score Sheet</button>\n        <button onClick={nextRound}>Next Round</button>\n      </div>\n      {showSheet && (\n        <ScoreSheet rounds={rounds} onClose={() => setShowSheet(false)} players={playerNames} />\n      )}\n    </div>\n  );\n}\n\nexport default GamePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}