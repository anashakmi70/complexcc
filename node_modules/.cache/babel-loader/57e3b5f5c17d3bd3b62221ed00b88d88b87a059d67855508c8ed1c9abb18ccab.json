{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Desktop/ComplexCCApp/complexcc-app/src/GameTracker.js\",\n  _s = $RefreshSig$();\n// src/GameTracker.js\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCAL_STORAGE_KEY = \"l6ooshGameData\";\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1\n};\nconst categories = [{\n  label: \"L6oosh\",\n  icon: /*#__PURE__*/_jsxDEV(CgCardSpades, {\n    color: \"#f87171\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"Diamonds\",\n  icon: /*#__PURE__*/_jsxDEV(FaGem, {\n    color: \"#60a5fa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 30\n  }, this)\n}, {\n  label: \"Queens\",\n  icon: /*#__PURE__*/_jsxDEV(FaChessQueen, {\n    color: \"#facc15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"King\",\n  icon: /*#__PURE__*/_jsxDEV(FaCrown, {\n    color: \"#a78bfa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 26\n  }, this)\n}];\nconst createEmptyPlayer = () => ({\n  L6oosh: {\n    count: 0,\n    doubled: false,\n    playedBy: null\n  },\n  Diamonds: {\n    count: 0,\n    doubled: false,\n    playedBy: null\n  },\n  Queens: {\n    count: 0,\n    doubled: false,\n    playedBy: null\n  },\n  King: {\n    count: 0,\n    doubled: false,\n    playedBy: null\n  }\n});\nconst initializeScores = () => {\n  // default structure: round 1 game 1 with 4 empty players\n  return {\n    1: {\n      1: Array.from({\n        length: 4\n      }, createEmptyPlayer),\n      2: Array.from({\n        length: 4\n      }, createEmptyPlayer)\n    },\n    2: {\n      1: Array.from({\n        length: 4\n      }, createEmptyPlayer),\n      2: Array.from({\n        length: 4\n      }, createEmptyPlayer)\n    },\n    3: {\n      1: Array.from({\n        length: 4\n      }, createEmptyPlayer),\n      2: Array.from({\n        length: 4\n      }, createEmptyPlayer)\n    },\n    4: {\n      1: Array.from({\n        length: 4\n      }, createEmptyPlayer),\n      2: Array.from({\n        length: 4\n      }, createEmptyPlayer)\n    }\n  };\n};\nconst saveToStorage = (scores, names) => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify({\n    scores,\n    names\n  }));\n};\nconst loadFromStorage = () => {\n  const data = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (data) {\n    try {\n      return JSON.parse(data);\n    } catch {\n      return null;\n    }\n  }\n  return null;\n};\nconst clearStorage = () => {\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n};\nfunction GameTracker() {\n  _s();\n  const {\n    roundId,\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const [names, setNames] = useState(() => {\n    const stored = loadFromStorage();\n    return (stored === null || stored === void 0 ? void 0 : stored.names) || [\"\", \"\", \"\", \"\"];\n  });\n  const [scores, setScores] = useState(() => {\n    const stored = loadFromStorage();\n    return (stored === null || stored === void 0 ? void 0 : stored.scores) || initializeScores();\n  });\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n\n  // Ensure current round/game data exists in scores state\n  useEffect(() => {\n    const updated = {\n      ...scores\n    };\n    if (!updated[roundId]) updated[roundId] = {};\n    if (!updated[roundId][gameId]) {\n      updated[roundId][gameId] = Array.from({\n        length: names.length\n      }, createEmptyPlayer);\n      setScores(updated);\n      saveToStorage(updated, names);\n    }\n  }, [roundId, gameId]);\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n    saveToStorage(scores, updated);\n  };\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({\n      playerIdx,\n      catLabel,\n      doubled: false,\n      playedBy: null\n    });\n  };\n  const closeModal = () => setModalInfo(null);\n  const submitModal = () => {\n    const {\n      playerIdx,\n      catLabel,\n      doubled,\n      playedBy\n    } = modalInfo;\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n    if (cat.count < max) {\n      cat.count++;\n      cat.doubled = doubled;\n      cat.playedBy = doubled ? playedBy : null;\n    }\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    saveToStorage(newScores, names);\n    closeModal();\n  };\n  const updateCount = (playerIdx, catLabel, delta) => {\n    if (delta === 1 && [\"Queens\", \"King\"].includes(catLabel)) {\n      openModal(playerIdx, catLabel);\n      return;\n    }\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    if (cat.count === 0) {\n      cat.doubled = false;\n      cat.playedBy = null;\n    }\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    saveToStorage(newScores, names);\n  };\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n    for (const cat of categories) {\n      const {\n        count,\n        doubled\n      } = player[cat.label];\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled ? count * -50 : count * -25;\n          break;\n        case \"King\":\n          score += doubled ? count * -150 : count * -75;\n          break;\n        default:\n          break;\n      }\n    }\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach(catName => {\n        const {\n          count,\n          doubled,\n          playedBy\n        } = other[catName];\n        const bonus = catName === \"Queens\" ? 25 : 75;\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      });\n    });\n    return score;\n  };\n  const allScores = Object.entries(scores).flatMap(([rId, games]) => Object.entries(games).map(([gId, playerData]) => ({\n    round: rId,\n    game: gId,\n    totals: playerData.map((_, idx) => calculateScore(rId, gId, idx))\n  })));\n  const goToNextGame = () => {\n    const nextGame = parseInt(gameId) === 1 ? 2 : null;\n    if (nextGame) {\n      navigate(`/round/${roundId}/game/${nextGame}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Round \", roundId, \" - Game \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: scores[roundId] && scores[roundId][gameId] && scores[roundId][gameId].map((playerScore, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"name-input\",\n          value: names[i],\n          onChange: e => handleNameChange(i, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: cat.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, -1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: playerScore[cat.label].count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, 1),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, cat.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [\"Total: \", calculateScore(roundId, gameId, i)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), modalInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [modalInfo.catLabel, \" Options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: modalInfo.doubled,\n            onChange: e => setModalInfo({\n              ...modalInfo,\n              doubled: e.target.checked,\n              playedBy: e.target.checked ? 0 : null\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), \"Doubled?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), modalInfo.doubled && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: modalInfo.playedBy,\n          onChange: e => setModalInfo({\n            ...modalInfo,\n            playedBy: parseInt(e.target.value)\n          }),\n          children: names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: n\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitModal,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/round/${roundId}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          children: [\"\\u2190 Back to Round \", roundId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextGame,\n        children: \"\\u2192 Next Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowScoreSheet(true),\n        children: \"\\uD83D\\uDCCA View Score Sheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), showScoreSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          maxWidth: \"90%\",\n          overflowX: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Score Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: \"100%\",\n            color: \"#fff\",\n            borderCollapse: \"collapse\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: n\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: allScores.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: entry.round\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: entry.game\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), entry.totals.map((score, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: score\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this))]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowScoreSheet(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n_s(GameTracker, \"iLHFz3BmWFYLi4TkNHA8SoChwSg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GameTracker;\nexport default GameTracker;\nvar _c;\n$RefreshReg$(_c, \"GameTracker\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","useNavigate","FaGem","FaCrown","FaChessQueen","CgCardSpades","jsxDEV","_jsxDEV","LOCAL_STORAGE_KEY","maxValues","L6oosh","Diamonds","Queens","King","categories","label","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","createEmptyPlayer","count","doubled","playedBy","initializeScores","Array","from","length","saveToStorage","scores","names","localStorage","setItem","JSON","stringify","loadFromStorage","data","getItem","parse","clearStorage","removeItem","GameTracker","_s","roundId","gameId","navigate","setNames","stored","setScores","modalInfo","setModalInfo","showScoreSheet","setShowScoreSheet","updated","handleNameChange","index","value","openModal","playerIdx","catLabel","closeModal","submitModal","newScores","player","cat","max","updateCount","delta","includes","Math","min","calculateScore","rId","gId","score","forEach","other","idx","catName","bonus","allScores","Object","entries","flatMap","games","map","playerData","round","game","totals","_","goToNextGame","nextGame","parseInt","className","children","playerScore","i","onChange","e","target","onClick","type","checked","n","style","marginTop","display","gap","flexWrap","justifyContent","to","maxWidth","overflowX","width","borderCollapse","entry","padding","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Desktop/ComplexCCApp/complexcc-app/src/GameTracker.js"],"sourcesContent":["// src/GameTracker.js\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\n\nconst LOCAL_STORAGE_KEY = \"l6ooshGameData\";\n\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1,\n};\n\nconst categories = [\n  { label: \"L6oosh\", icon: <CgCardSpades color=\"#f87171\" /> },\n  { label: \"Diamonds\", icon: <FaGem color=\"#60a5fa\" /> },\n  { label: \"Queens\", icon: <FaChessQueen color=\"#facc15\" /> },\n  { label: \"King\", icon: <FaCrown color=\"#a78bfa\" /> },\n];\n\nconst createEmptyPlayer = () => ({\n  L6oosh: { count: 0, doubled: false, playedBy: null },\n  Diamonds: { count: 0, doubled: false, playedBy: null },\n  Queens: { count: 0, doubled: false, playedBy: null },\n  King: { count: 0, doubled: false, playedBy: null },\n});\n\nconst initializeScores = () => {\n  // default structure: round 1 game 1 with 4 empty players\n  return {\n    1: {\n      1: Array.from({ length: 4 }, createEmptyPlayer),\n      2: Array.from({ length: 4 }, createEmptyPlayer),\n    },\n    2: {\n      1: Array.from({ length: 4 }, createEmptyPlayer),\n      2: Array.from({ length: 4 }, createEmptyPlayer),\n    },\n    3: {\n      1: Array.from({ length: 4 }, createEmptyPlayer),\n      2: Array.from({ length: 4 }, createEmptyPlayer),\n    },\n    4: {\n      1: Array.from({ length: 4 }, createEmptyPlayer),\n      2: Array.from({ length: 4 }, createEmptyPlayer),\n    },\n  };\n};\n\nconst saveToStorage = (scores, names) => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify({ scores, names }));\n};\n\nconst loadFromStorage = () => {\n  const data = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (data) {\n    try {\n      return JSON.parse(data);\n    } catch {\n      return null;\n    }\n  }\n  return null;\n};\n\nconst clearStorage = () => {\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n};\n\nfunction GameTracker() {\n  const { roundId, gameId } = useParams();\n  const navigate = useNavigate();\n\n  const [names, setNames] = useState(() => {\n    const stored = loadFromStorage();\n    return stored?.names || [\"\", \"\", \"\", \"\"];\n  });\n\n  const [scores, setScores] = useState(() => {\n    const stored = loadFromStorage();\n    return stored?.scores || initializeScores();\n  });\n\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n\n  // Ensure current round/game data exists in scores state\n  useEffect(() => {\n    const updated = { ...scores };\n    if (!updated[roundId]) updated[roundId] = {};\n    if (!updated[roundId][gameId]) {\n      updated[roundId][gameId] = Array.from({ length: names.length }, createEmptyPlayer);\n      setScores(updated);\n      saveToStorage(updated, names);\n    }\n  }, [roundId, gameId]);\n\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n    saveToStorage(scores, updated);\n  };\n\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({ playerIdx, catLabel, doubled: false, playedBy: null });\n  };\n\n  const closeModal = () => setModalInfo(null);\n\n  const submitModal = () => {\n    const { playerIdx, catLabel, doubled, playedBy } = modalInfo;\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n\n    if (cat.count < max) {\n      cat.count++;\n      cat.doubled = doubled;\n      cat.playedBy = doubled ? playedBy : null;\n    }\n\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    saveToStorage(newScores, names);\n    closeModal();\n  };\n\n  const updateCount = (playerIdx, catLabel, delta) => {\n    if (delta === 1 && [\"Queens\", \"King\"].includes(catLabel)) {\n      openModal(playerIdx, catLabel);\n      return;\n    }\n\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n\n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    if (cat.count === 0) {\n      cat.doubled = false;\n      cat.playedBy = null;\n    }\n\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    saveToStorage(newScores, names);\n  };\n\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n\n    for (const cat of categories) {\n      const { count, doubled } = player[cat.label];\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled ? count * -50 : count * -25;\n          break;\n        case \"King\":\n          score += doubled ? count * -150 : count * -75;\n          break;\n        default:\n          break;\n      }\n    }\n\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach((catName) => {\n        const { count, doubled, playedBy } = other[catName];\n        const bonus = catName === \"Queens\" ? 25 : 75;\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      });\n    });\n\n    return score;\n  };\n\n  const allScores = Object.entries(scores).flatMap(([rId, games]) =>\n    Object.entries(games).map(([gId, playerData]) => ({\n      round: rId,\n      game: gId,\n      totals: playerData.map((_, idx) => calculateScore(rId, gId, idx)),\n    }))\n  );\n\n  const goToNextGame = () => {\n    const nextGame = parseInt(gameId) === 1 ? 2 : null;\n    if (nextGame) {\n      navigate(`/round/${roundId}/game/${nextGame}`);\n    }\n  };\n\n  return (\n    <div className=\"counter-page\">\n      <h2>Round {roundId} - Game {gameId}</h2>\n      <div className=\"players-grid\">\n        {scores[roundId] && scores[roundId][gameId] && scores[roundId][gameId].map((playerScore, i) => (\n          <div key={i} className=\"player-card\">\n            <input\n              className=\"name-input\"\n              value={names[i]}\n              onChange={(e) => handleNameChange(i, e.target.value)}\n            />\n            {categories.map((cat) => (\n              <div key={cat.label} className=\"controls\">\n                <span>{cat.icon}</span>\n                <button onClick={() => updateCount(i, cat.label, -1)}>-</button>\n                <span>{playerScore[cat.label].count}</span>\n                <button onClick={() => updateCount(i, cat.label, 1)}>+</button>\n              </div>\n            ))}\n            <div className=\"score-display\">Total: {calculateScore(roundId, gameId, i)}</div>\n          </div>\n        ))}\n      </div>\n\n      {modalInfo && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>{modalInfo.catLabel} Options</h3>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={modalInfo.doubled}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    doubled: e.target.checked,\n                    playedBy: e.target.checked ? 0 : null,\n                  })\n                }\n              />\n              Doubled?\n            </label>\n            {modalInfo.doubled && (\n              <select\n                value={modalInfo.playedBy}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    playedBy: parseInt(e.target.value),\n                  })\n                }\n              >\n                {names.map((n, idx) => (\n                  <option key={idx} value={idx}>\n                    {n}\n                  </option>\n                ))}\n              </select>\n            )}\n            <button onClick={submitModal}>Confirm</button>\n            <button onClick={closeModal}>Cancel</button>\n          </div>\n        </div>\n      )}\n\n      <div style={{ marginTop: \"20px\", display: \"flex\", gap: \"10px\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n        <Link to={`/round/${roundId}`}>\n          <button className=\"back-btn\">← Back to Round {roundId}</button>\n        </Link>\n        <button onClick={goToNextGame}>→ Next Game</button>\n        <button onClick={() => setShowScoreSheet(true)}>📊 View Score Sheet</button>\n      </div>\n\n      {showScoreSheet && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\" style={{ maxWidth: \"90%\", overflowX: \"auto\" }}>\n            <h3>Score Sheet</h3>\n            <table style={{ width: \"100%\", color: \"#fff\", borderCollapse: \"collapse\" }}>\n              <thead>\n                <tr>\n                  <th>Round</th>\n                  <th>Game</th>\n                  {names.map((n, idx) => (\n                    <th key={idx}>{n}</th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {allScores.map((entry, idx) => (\n                  <tr key={idx}>\n                    <td style={{ padding: \"4px 8px\" }}>{entry.round}</td>\n                    <td style={{ padding: \"4px 8px\" }}>{entry.game}</td>\n                    {entry.totals.map((score, i) => (\n                      <td key={i} style={{ padding: \"4px 8px\" }}>{score}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button onClick={() => setShowScoreSheet(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}