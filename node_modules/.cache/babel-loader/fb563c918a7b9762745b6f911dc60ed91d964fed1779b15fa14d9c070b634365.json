{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Documents/GitHub/complexcc/src/components/PlayerInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DoublePopup from './DoublePopup';\nimport './PlayerInput.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardTypes = ['l6oosh', 'diamonds', 'queens', 'kings'];\nfunction PlayerInput({\n  mode,\n  scores,\n  setScores,\n  rounds,\n  setRounds,\n  cardCounts,\n  setCardCounts,\n  playerNames\n}) {\n  _s();\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const handleCard = (type, player, operation) => {\n    // Only allow remove if there's something to remove\n    if (operation === 'remove' && (type === 'l6oosh' || type === 'diamonds')) {\n      if (cardCounts[type] <= 0) return;\n    }\n    if ((type === 'queens' || type === 'kings') && operation === 'add') {\n      setSelectedCard(type);\n      setSelectedPlayer(player);\n    } else {\n      updateScore(type, player, operation);\n    }\n  };\n  const updateScore = (type, player, operation, doubled = false, dealer = null) => {\n    const newScores = {\n      ...scores\n    };\n    const modifier = operation === 'remove' ? -1 : 1;\n    let actualDoubled = doubled;\n    let actualDealer = dealer;\n    if ((type === 'queens' || type === 'kings') && operation === 'remove') {\n      const existing = cardCounts[type].find(c => c.player === player);\n      if (!existing) return; // Don't remove if not found\n      actualDoubled = existing.doubled;\n      actualDealer = existing.dealer;\n    }\n    const points = getPoints(type, actualDoubled, player, actualDealer);\n    newScores[player] = (newScores[player] || 0) + (points[player] || 0) * modifier;\n    if (actualDoubled && actualDealer && actualDealer !== player) {\n      newScores[actualDealer] = (newScores[actualDealer] || 0) + (points[actualDealer] || 0) * modifier;\n    }\n    const newCounts = {\n      ...cardCounts\n    };\n    if (type === 'l6oosh' || type === 'diamonds') {\n      newCounts[type] = Math.max(0, newCounts[type] + modifier);\n    } else {\n      const cardList = [...newCounts[type]];\n      if (operation === 'add') {\n        cardList.push({\n          player,\n          doubled,\n          dealer\n        });\n      } else {\n        const idx = cardList.findIndex(c => c.player === player);\n        if (idx !== -1) cardList.splice(idx, 1);\n      }\n      newCounts[type] = cardList;\n    }\n    setScores(newScores);\n    setCardCounts(newCounts);\n    setSelectedCard(null);\n    setSelectedPlayer(null);\n  };\n  const getPoints = (type, doubled, eater, dealer) => {\n    const base = {\n      l6oosh: -15,\n      diamonds: -10,\n      queens: doubled ? -50 : -25,\n      kings: doubled ? -150 : -75\n    };\n    const dealerBonus = {\n      queens: 25,\n      kings: 75\n    };\n    const points = {\n      [eater]: base[type]\n    };\n    if (doubled && dealer && dealer !== eater) {\n      points[dealer] = dealerBonus[type];\n    }\n    return points;\n  };\n  const renderButtons = player => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-grid\",\n    children: cardTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-grid-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCard(type, player, 'remove'),\n        children: [\"\\u2212 \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCard(type, player, 'add'),\n        children: [\"+ \", type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, type, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-grid\",\n    children: [playerNames.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), renderButtons(player), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total: \", scores[player] || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)), selectedCard && /*#__PURE__*/_jsxDEV(DoublePopup, {\n      type: selectedCard,\n      player: selectedPlayer,\n      players: playerNames,\n      onSubmit: (doubled, dealer) => updateScore(selectedCard, selectedPlayer, 'add', doubled, dealer),\n      onClose: () => {\n        setSelectedCard(null);\n        setSelectedPlayer(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerInput, \"fAEEG6FrxgizSZgVhYW3F1YIHhE=\");\n_c = PlayerInput;\nexport default PlayerInput;\nvar _c;\n$RefreshReg$(_c, \"PlayerInput\");","map":{"version":3,"names":["React","useState","DoublePopup","jsxDEV","_jsxDEV","cardTypes","PlayerInput","mode","scores","setScores","rounds","setRounds","cardCounts","setCardCounts","playerNames","_s","selectedCard","setSelectedCard","selectedPlayer","setSelectedPlayer","handleCard","type","player","operation","updateScore","doubled","dealer","newScores","modifier","actualDoubled","actualDealer","existing","find","c","points","getPoints","newCounts","Math","max","cardList","push","idx","findIndex","splice","eater","base","l6oosh","diamonds","queens","kings","dealerBonus","renderButtons","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","index","players","onSubmit","onClose","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Documents/GitHub/complexcc/src/components/PlayerInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DoublePopup from './DoublePopup';\nimport './PlayerInput.css';\n\nconst cardTypes = ['l6oosh', 'diamonds', 'queens', 'kings'];\n\nfunction PlayerInput({ mode, scores, setScores, rounds, setRounds, cardCounts, setCardCounts, playerNames }) {\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n\n  const handleCard = (type, player, operation) => {\n    // Only allow remove if there's something to remove\n    if (operation === 'remove' && (type === 'l6oosh' || type === 'diamonds')) {\n      if (cardCounts[type] <= 0) return;\n    }\n\n    if ((type === 'queens' || type === 'kings') && operation === 'add') {\n      setSelectedCard(type);\n      setSelectedPlayer(player);\n    } else {\n      updateScore(type, player, operation);\n    }\n  };\n\n  const updateScore = (type, player, operation, doubled = false, dealer = null) => {\n    const newScores = { ...scores };\n    const modifier = operation === 'remove' ? -1 : 1;\n\n    let actualDoubled = doubled;\n    let actualDealer = dealer;\n\n    if ((type === 'queens' || type === 'kings') && operation === 'remove') {\n      const existing = cardCounts[type].find(c => c.player === player);\n      if (!existing) return; // Don't remove if not found\n      actualDoubled = existing.doubled;\n      actualDealer = existing.dealer;\n    }\n\n    const points = getPoints(type, actualDoubled, player, actualDealer);\n\n    newScores[player] = (newScores[player] || 0) + (points[player] || 0) * modifier;\n\n    if (actualDoubled && actualDealer && actualDealer !== player) {\n      newScores[actualDealer] = (newScores[actualDealer] || 0) + (points[actualDealer] || 0) * modifier;\n    }\n\n    const newCounts = { ...cardCounts };\n\n    if (type === 'l6oosh' || type === 'diamonds') {\n      newCounts[type] = Math.max(0, newCounts[type] + modifier);\n    } else {\n      const cardList = [...newCounts[type]];\n      if (operation === 'add') {\n        cardList.push({ player, doubled, dealer });\n      } else {\n        const idx = cardList.findIndex(c => c.player === player);\n        if (idx !== -1) cardList.splice(idx, 1);\n      }\n      newCounts[type] = cardList;\n    }\n\n    setScores(newScores);\n    setCardCounts(newCounts);\n    setSelectedCard(null);\n    setSelectedPlayer(null);\n  };\n\n  const getPoints = (type, doubled, eater, dealer) => {\n    const base = {\n      l6oosh: -15,\n      diamonds: -10,\n      queens: doubled ? -50 : -25,\n      kings: doubled ? -150 : -75,\n    };\n    const dealerBonus = {\n      queens: 25,\n      kings: 75,\n    };\n    const points = { [eater]: base[type] };\n    if (doubled && dealer && dealer !== eater) {\n      points[dealer] = dealerBonus[type];\n    }\n    return points;\n  };\n\n  const renderButtons = (player) => (\n    <div className=\"button-grid\">\n      {cardTypes.map(type => (\n        <div className=\"button-grid-row\" key={type}>\n          <button onClick={() => handleCard(type, player, 'remove')}>âˆ’ {type}</button>\n          <button onClick={() => handleCard(type, player, 'add')}>+ {type}</button>\n        </div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"player-grid\">\n      {playerNames.map((player, index) => (\n        <div key={index} className=\"player-box\">\n          <h3>{player}</h3>\n          {renderButtons(player)}\n          <p>Total: {scores[player] || 0}</p>\n        </div>\n      ))}\n      {selectedCard && (\n        <DoublePopup\n          type={selectedCard}\n          player={selectedPlayer}\n          players={playerNames}\n          onSubmit={(doubled, dealer) =>\n            updateScore(selectedCard, selectedPlayer, 'add', doubled, dealer)\n          }\n          onClose={() => {\n            setSelectedCard(null);\n            setSelectedPlayer(null);\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default PlayerInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}