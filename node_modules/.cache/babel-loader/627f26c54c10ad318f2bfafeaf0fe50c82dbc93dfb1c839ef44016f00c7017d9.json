{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Desktop/ComplexCCApp/complexcc-app/src/GameTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNames = [\"Player 1\", \"Player 2\", \"Player 3\", \"Player 4\"];\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1\n};\nconst categories = [{\n  label: \"L6oosh\",\n  icon: /*#__PURE__*/_jsxDEV(CgCardSpades, {\n    color: \"#f87171\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"Diamonds\",\n  icon: /*#__PURE__*/_jsxDEV(FaGem, {\n    color: \"#60a5fa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 30\n  }, this)\n}, {\n  label: \"Queens\",\n  icon: /*#__PURE__*/_jsxDEV(FaChessQueen, {\n    color: \"#facc15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"King\",\n  icon: /*#__PURE__*/_jsxDEV(FaCrown, {\n    color: \"#a78bfa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 26\n  }, this)\n}];\nfunction GameTracker() {\n  _s();\n  const {\n    roundId,\n    gameId\n  } = useParams();\n  const [names, setNames] = useState(initialNames);\n  const [scores, setScores] = useState(initialNames.map(() => categories.reduce((acc, cat) => ({\n    ...acc,\n    [cat.label]: {\n      count: 0,\n      doubled: false,\n      playedBy: null\n    }\n  }), {})));\n  const updateCount = (playerIdx, catLabel, delta) => {\n    const newScores = [...scores];\n    const cat = newScores[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    setScores(newScores);\n  };\n  const toggleDoubled = (playerIdx, catLabel) => {\n    const newScores = [...scores];\n    newScores[playerIdx][catLabel].doubled = !newScores[playerIdx][catLabel].doubled;\n    if (!newScores[playerIdx][catLabel].doubled) {\n      newScores[playerIdx][catLabel].playedBy = null;\n    }\n    setScores(newScores);\n  };\n  const setPlayedBy = (playerIdx, catLabel, playedByIdx) => {\n    const newScores = [...scores];\n    newScores[playerIdx][catLabel].playedBy = playedByIdx;\n    setScores(newScores);\n  };\n  const handleNameChange = (index, value) => {\n    const newNames = [...names];\n    newNames[index] = value;\n    setNames(newNames);\n  };\n  const calculateScore = playerIdx => {\n    let score = 0;\n    const player = scores[playerIdx];\n    for (const cat of categories) {\n      const {\n        count,\n        doubled,\n        playedBy\n      } = player[cat.label];\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled ? count * -50 : count * -25;\n\n          // Add bonus to \"playedBy\" if set\n          if (doubled && playedBy !== null) {\n            score += playedBy === playerIdx ? 0 : 0; // Prevent self-play bonus\n          }\n          break;\n        case \"King\":\n          score += doubled ? count * -150 : count * -75;\n          if (doubled && playedBy !== null) {\n            score += playedBy === playerIdx ? 0 : 0;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    // Bonus from other players\n    for (let i = 0; i < scores.length; i++) {\n      if (i === playerIdx) continue;\n      const other = scores[i];\n      for (const cat of [\"Queens\", \"King\"]) {\n        const {\n          count,\n          doubled,\n          playedBy\n        } = other[cat];\n        const bonus = cat === \"Queens\" ? 25 : 75;\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      }\n    }\n    return score;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Round \", roundId, \" - Game \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: scores.map((playerScore, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"name-input\",\n          value: names[i],\n          onChange: e => handleNameChange(i, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), categories.map(cat => {\n          const item = playerScore[cat.label];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: cat.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateCount(i, cat.label, -1),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateCount(i, cat.label, 1),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, cat.label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this);\n        }), [\"Queens\", \"King\"].map(catName => {\n          var _cat$playedBy;\n          const cat = playerScore[catName];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extras\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: cat.doubled,\n                onChange: () => toggleDoubled(i, catName)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this), \"Double \", catName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), cat.doubled && cat.count > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n              value: (_cat$playedBy = cat.playedBy) !== null && _cat$playedBy !== void 0 ? _cat$playedBy : \"\",\n              onChange: e => setPlayedBy(i, catName, parseInt(e.target.value)),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Played by...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 23\n              }, this), names.map((name, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: idx,\n                children: name\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this)]\n          }, catName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [\"Total: \", calculateScore(i)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/round/${roundId}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-btn\",\n        children: [\"\\u2190 Back to Round \", roundId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(GameTracker, \"As5AettwVXlbx9HajX7cEdDoeZE=\", false, function () {\n  return [useParams];\n});\n_c = GameTracker;\nexport default GameTracker;\nvar _c;\n$RefreshReg$(_c, \"GameTracker\");","map":{"version":3,"names":["React","useState","useParams","Link","FaGem","FaCrown","FaChessQueen","CgCardSpades","jsxDEV","_jsxDEV","initialNames","maxValues","L6oosh","Diamonds","Queens","King","categories","label","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","GameTracker","_s","roundId","gameId","names","setNames","scores","setScores","map","reduce","acc","cat","count","doubled","playedBy","updateCount","playerIdx","catLabel","delta","newScores","max","Math","min","toggleDoubled","setPlayedBy","playedByIdx","handleNameChange","index","value","newNames","calculateScore","score","player","i","length","other","bonus","className","children","playerScore","onChange","e","target","item","onClick","catName","_cat$playedBy","type","checked","parseInt","name","idx","to","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Desktop/ComplexCCApp/complexcc-app/src/GameTracker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\n\nconst initialNames = [\"Player 1\", \"Player 2\", \"Player 3\", \"Player 4\"];\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1,\n};\n\nconst categories = [\n  { label: \"L6oosh\", icon: <CgCardSpades color=\"#f87171\" /> },\n  { label: \"Diamonds\", icon: <FaGem color=\"#60a5fa\" /> },\n  { label: \"Queens\", icon: <FaChessQueen color=\"#facc15\" /> },\n  { label: \"King\", icon: <FaCrown color=\"#a78bfa\" /> },\n];\n\nfunction GameTracker() {\n  const { roundId, gameId } = useParams();\n\n  const [names, setNames] = useState(initialNames);\n  const [scores, setScores] = useState(\n    initialNames.map(() =>\n      categories.reduce(\n        (acc, cat) => ({\n          ...acc,\n          [cat.label]: {\n            count: 0,\n            doubled: false,\n            playedBy: null,\n          },\n        }),\n        {}\n      )\n    )\n  );\n\n  const updateCount = (playerIdx, catLabel, delta) => {\n    const newScores = [...scores];\n    const cat = newScores[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n\n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    setScores(newScores);\n  };\n\n  const toggleDoubled = (playerIdx, catLabel) => {\n    const newScores = [...scores];\n    newScores[playerIdx][catLabel].doubled =\n      !newScores[playerIdx][catLabel].doubled;\n\n    if (!newScores[playerIdx][catLabel].doubled) {\n      newScores[playerIdx][catLabel].playedBy = null;\n    }\n\n    setScores(newScores);\n  };\n\n  const setPlayedBy = (playerIdx, catLabel, playedByIdx) => {\n    const newScores = [...scores];\n    newScores[playerIdx][catLabel].playedBy = playedByIdx;\n    setScores(newScores);\n  };\n\n  const handleNameChange = (index, value) => {\n    const newNames = [...names];\n    newNames[index] = value;\n    setNames(newNames);\n  };\n\n  const calculateScore = (playerIdx) => {\n    let score = 0;\n    const player = scores[playerIdx];\n\n    for (const cat of categories) {\n      const { count, doubled, playedBy } = player[cat.label];\n\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled\n            ? count * -50\n            : count * -25;\n\n          // Add bonus to \"playedBy\" if set\n          if (doubled && playedBy !== null) {\n            score += (playedBy === playerIdx ? 0 : 0); // Prevent self-play bonus\n          }\n          break;\n        case \"King\":\n          score += doubled\n            ? count * -150\n            : count * -75;\n\n          if (doubled && playedBy !== null) {\n            score += (playedBy === playerIdx ? 0 : 0);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    // Bonus from other players\n    for (let i = 0; i < scores.length; i++) {\n      if (i === playerIdx) continue;\n\n      const other = scores[i];\n      for (const cat of [\"Queens\", \"King\"]) {\n        const { count, doubled, playedBy } = other[cat];\n        const bonus =\n          cat === \"Queens\" ? 25 : 75;\n\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      }\n    }\n\n    return score;\n  };\n\n  return (\n    <div className=\"counter-page\">\n      <h2>Round {roundId} - Game {gameId}</h2>\n      <div className=\"players-grid\">\n        {scores.map((playerScore, i) => (\n          <div key={i} className=\"player-card\">\n            <input\n              className=\"name-input\"\n              value={names[i]}\n              onChange={(e) => handleNameChange(i, e.target.value)}\n            />\n            {categories.map((cat) => {\n              const item = playerScore[cat.label];\n              return (\n                <div key={cat.label} className=\"controls\">\n                  <span>{cat.icon}</span>\n                  <button onClick={() => updateCount(i, cat.label, -1)}>-</button>\n                  <span>{item.count}</span>\n                  <button onClick={() => updateCount(i, cat.label, 1)}>+</button>\n                </div>\n              );\n            })}\n            {[\"Queens\", \"King\"].map((catName) => {\n              const cat = playerScore[catName];\n              return (\n                <div key={catName} className=\"extras\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={cat.doubled}\n                      onChange={() => toggleDoubled(i, catName)}\n                    />\n                    Double {catName}\n                  </label>\n                  {cat.doubled && cat.count > 0 && (\n                    <select\n                      value={cat.playedBy ?? \"\"}\n                      onChange={(e) =>\n                        setPlayedBy(i, catName, parseInt(e.target.value))\n                      }\n                    >\n                      <option value=\"\">Played by...</option>\n                      {names.map((name, idx) => (\n                        <option key={idx} value={idx}>\n                          {name}\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </div>\n              );\n            })}\n            <div className=\"score-display\">Total: {calculateScore(i)}</div>\n          </div>\n        ))}\n      </div>\n      <Link to={`/round/${roundId}`}>\n        <button className=\"back-btn\">← Back to Round {roundId}</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default GameTracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}