{"ast":null,"code":"var _jsxFileName = \"/Users/anashakmi/Documents/GitHub/complexcc/src/GameTracker.js\",\n  _s = $RefreshSig$();\n// src/GameTracker.js\nimport React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { useScoreStore } from \"./useScoreStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1\n};\nconst categories = [{\n  label: \"L6oosh\",\n  icon: /*#__PURE__*/_jsxDEV(CgCardSpades, {\n    color: \"#f87171\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"Diamonds\",\n  icon: /*#__PURE__*/_jsxDEV(FaGem, {\n    color: \"#60a5fa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 30\n  }, this)\n}, {\n  label: \"Queens\",\n  icon: /*#__PURE__*/_jsxDEV(FaChessQueen, {\n    color: \"#facc15\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 28\n  }, this)\n}, {\n  label: \"King\",\n  icon: /*#__PURE__*/_jsxDEV(FaCrown, {\n    color: \"#a78bfa\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 26\n  }, this)\n}];\nfunction GameTracker() {\n  _s();\n  const {\n    roundId,\n    gameId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    scores,\n    setScores,\n    names,\n    setNames\n  } = useScoreStore();\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n  const roundScores = scores[roundId][gameId];\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n  };\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({\n      playerIdx,\n      catLabel,\n      doubled: false,\n      playedBy: null\n    });\n  };\n  const closeModal = () => setModalInfo(null);\n  const submitModal = () => {\n    const {\n      playerIdx,\n      catLabel,\n      doubled,\n      playedBy\n    } = modalInfo;\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n\n    // Total across all players\n    const totalForCategory = player.reduce((acc, p) => acc + p[catLabel].count, 0);\n    if (totalForCategory >= max) {\n      closeModal();\n      return;\n    }\n    if (cat.count < max) {\n      cat.count++;\n      cat.doubled = doubled;\n      cat.playedBy = doubled ? playedBy : null;\n    }\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    closeModal();\n  };\n  const cardsLeft = () => {\n    const playerData = scores[roundId][gameId];\n    const left = {};\n    categories.forEach(({\n      label\n    }) => {\n      const totalUsed = playerData.reduce((sum, p) => sum + p[label].count, 0);\n      left[label] = maxValues[label] - totalUsed;\n    });\n    return left;\n  };\n  const updateCount = (playerIdx, catLabel, delta) => {\n    const newScores = {\n      ...scores\n    };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n\n    // Calculate total across all players\n    const totalForCategory = player.reduce((acc, p) => acc + p[catLabel].count, 0);\n    if (delta === 1) {\n      if ([\"Queens\", \"King\"].includes(catLabel)) {\n        openModal(playerIdx, catLabel);\n        return;\n      }\n      if (totalForCategory >= max) return; // Block if total exceeds max\n    }\n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    if (cat.count === 0) {\n      cat.doubled = false;\n      cat.playedBy = null;\n    }\n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n  };\n\n  // Calculate score for playerIdx in a specific round and game\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n    for (const cat of categories) {\n      const {\n        count,\n        doubled\n      } = player[cat.label];\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled ? count * -50 : count * -25;\n          break;\n        case \"King\":\n          score += doubled ? count * -150 : count * -75;\n          break;\n        default:\n          break;\n      }\n    }\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach(catName => {\n        const {\n          count,\n          doubled,\n          playedBy\n        } = other[catName];\n        const bonus = catName === \"Queens\" ? 25 : 75;\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      });\n    });\n    return score;\n  };\n\n  // New: Calculate cumulative score for playerIdx across all rounds/games up to current\n  const calculateCumulativeScore = playerIdx => {\n    let totalScore = 0;\n    const sortedRounds = Object.keys(scores).sort((a, b) => parseInt(a) - parseInt(b));\n    for (const rId of sortedRounds) {\n      const games = scores[rId];\n      const sortedGames = Object.keys(games).sort((a, b) => parseInt(a) - parseInt(b));\n      for (const gId of sortedGames) {\n        if (parseInt(rId) < parseInt(roundId) || parseInt(rId) === parseInt(roundId) && parseInt(gId) <= parseInt(gameId)) {\n          totalScore += calculateScore(rId, gId, playerIdx);\n        }\n      }\n    }\n    return totalScore;\n  };\n\n  // For Score Sheet: gather all totals by round/game/player\n  const allScores = Object.entries(scores).flatMap(([rId, games]) => Object.entries(games).map(([gId, playerData]) => ({\n    round: rId,\n    game: gId,\n    totals: playerData.map((_, idx) => calculateScore(rId, gId, idx))\n  })));\n  const goToNextGame = () => {\n    const currentRound = parseInt(roundId);\n    const currentGame = parseInt(gameId);\n    if (currentGame === 1) {\n      // Go to Game 2 of the same round\n      navigate(`/round/${currentRound}/game/2`);\n    } else if (currentGame === 2 && currentRound < 4) {\n      // Go to Game 1 of the next round\n      navigate(`/round/${currentRound + 1}/game/1`);\n    } else {\n      // End of last game (Round 4 Game 2), maybe show a message or do nothing\n      alert(\"🎉 You've completed all rounds!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Round \", roundId, \" - Game \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: roundScores.map((playerScore, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"name-input\",\n          value: names[i],\n          onChange: e => handleNameChange(i, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: cat.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, -1),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: playerScore[cat.label].count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateCount(i, cat.label, 1),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, cat.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [\"Total: \", calculateCumulativeScore(i)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), modalInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [modalInfo.catLabel, \" Options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: modalInfo.doubled,\n            onChange: e => setModalInfo({\n              ...modalInfo,\n              doubled: e.target.checked,\n              playedBy: e.target.checked ? 0 : null\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), \"Doubled?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), modalInfo.doubled && /*#__PURE__*/_jsxDEV(\"select\", {\n          value: modalInfo.playedBy,\n          onChange: e => setModalInfo({\n            ...modalInfo,\n            playedBy: parseInt(e.target.value)\n          }),\n          children: names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: idx,\n            children: n\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitModal,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 10,\n        right: 10,\n        backgroundColor: \"#222\",\n        color: \"#eee\",\n        padding: \"8px 12px\",\n        borderRadius: \"8px\",\n        fontSize: \"0.9rem\",\n        zIndex: 1000,\n        boxShadow: \"0 0 8px rgba(0,0,0,0.5)\"\n      },\n      children: Object.entries(cardsLeft()).map(([cat, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 4\n        },\n        children: [cat, \": \", count]\n      }, cat, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/round/${roundId}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          children: [\"\\u2190 Back to Round \", roundId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: goToNextGame,\n        children: \"\\u2192 Next Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowScoreSheet(true),\n        children: \"\\uD83D\\uDCCA View Score Sheet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), showScoreSheet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          maxWidth: \"90%\",\n          overflowX: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Score Sheet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            width: \"100%\",\n            color: \"#fff\",\n            borderCollapse: \"collapse\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 5\n              }, this), names.map((n, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: n\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 7\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: allScores.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: [\"Round \", entry.round, \" - Game \", entry.game]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 7\n              }, this), entry.totals.map((score, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"4px 8px\"\n                },\n                children: score\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 9\n              }, this))]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 5\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowScoreSheet(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(GameTracker, \"sFz7C7ePbBnnTarDob0RTNgEMZs=\", false, function () {\n  return [useParams, useNavigate, useScoreStore];\n});\n_c = GameTracker;\nexport default GameTracker;\nvar _c;\n$RefreshReg$(_c, \"GameTracker\");","map":{"version":3,"names":["React","useState","useParams","Link","useNavigate","FaGem","FaCrown","FaChessQueen","CgCardSpades","useScoreStore","jsxDEV","_jsxDEV","maxValues","L6oosh","Diamonds","Queens","King","categories","label","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","GameTracker","_s","roundId","gameId","navigate","scores","setScores","names","setNames","modalInfo","setModalInfo","showScoreSheet","setShowScoreSheet","roundScores","handleNameChange","index","value","updated","openModal","playerIdx","catLabel","doubled","playedBy","closeModal","submitModal","newScores","player","cat","max","totalForCategory","reduce","acc","p","count","cardsLeft","playerData","left","forEach","totalUsed","sum","updateCount","delta","includes","Math","min","calculateScore","rId","gId","score","other","idx","catName","bonus","calculateCumulativeScore","totalScore","sortedRounds","Object","keys","sort","a","b","parseInt","games","sortedGames","allScores","entries","flatMap","map","round","game","totals","_","goToNextGame","currentRound","currentGame","alert","className","children","playerScore","i","onChange","e","target","onClick","type","checked","n","style","position","top","right","backgroundColor","padding","borderRadius","fontSize","zIndex","boxShadow","marginBottom","marginTop","display","gap","flexWrap","justifyContent","to","maxWidth","overflowX","width","borderCollapse","entry","_c","$RefreshReg$"],"sources":["/Users/anashakmi/Documents/GitHub/complexcc/src/GameTracker.js"],"sourcesContent":["// src/GameTracker.js\nimport React, { useState } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { FaGem, FaCrown, FaChessQueen } from \"react-icons/fa\";\nimport { CgCardSpades } from \"react-icons/cg\";\nimport { useScoreStore } from \"./useScoreStore\";\n\nconst maxValues = {\n  L6oosh: 13,\n  Diamonds: 13,\n  Queens: 4,\n  King: 1,\n};\n\nconst categories = [\n  { label: \"L6oosh\", icon: <CgCardSpades color=\"#f87171\" /> },\n  { label: \"Diamonds\", icon: <FaGem color=\"#60a5fa\" /> },\n  { label: \"Queens\", icon: <FaChessQueen color=\"#facc15\" /> },\n  { label: \"King\", icon: <FaCrown color=\"#a78bfa\" /> },\n];\n\nfunction GameTracker() {\n  const { roundId, gameId } = useParams();\n  const navigate = useNavigate();\n  const { scores, setScores, names, setNames } = useScoreStore();\n  const [modalInfo, setModalInfo] = useState(null);\n  const [showScoreSheet, setShowScoreSheet] = useState(false);\n\n  const roundScores = scores[roundId][gameId];\n\n  const handleNameChange = (index, value) => {\n    const updated = [...names];\n    updated[index] = value;\n    setNames(updated);\n  };\n\n  const openModal = (playerIdx, catLabel) => {\n    setModalInfo({ playerIdx, catLabel, doubled: false, playedBy: null });\n  };\n\n  const closeModal = () => setModalInfo(null);\n\n  const submitModal = () => {\n    const { playerIdx, catLabel, doubled, playedBy } = modalInfo;\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n  \n    // Total across all players\n    const totalForCategory = player.reduce((acc, p) => acc + p[catLabel].count, 0);\n  \n    if (totalForCategory >= max) {\n      closeModal();\n      return;\n    }\n  \n    if (cat.count < max) {\n      cat.count++;\n      cat.doubled = doubled;\n      cat.playedBy = doubled ? playedBy : null;\n    }\n  \n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n    closeModal();\n  };\n  \n  const cardsLeft = () => {\n    const playerData = scores[roundId][gameId];\n    const left = {};\n  \n    categories.forEach(({ label }) => {\n      const totalUsed = playerData.reduce((sum, p) => sum + p[label].count, 0);\n      left[label] = maxValues[label] - totalUsed;\n    });\n  \n    return left;\n  };\n\n  const updateCount = (playerIdx, catLabel, delta) => {\n    const newScores = { ...scores };\n    const player = [...newScores[roundId][gameId]];\n    const cat = player[playerIdx][catLabel];\n    const max = maxValues[catLabel];\n  \n    // Calculate total across all players\n    const totalForCategory = player.reduce((acc, p) => acc + p[catLabel].count, 0);\n  \n    if (delta === 1) {\n      if ([\"Queens\", \"King\"].includes(catLabel)) {\n        openModal(playerIdx, catLabel);\n        return;\n      }\n      if (totalForCategory >= max) return; // Block if total exceeds max\n    }\n  \n    cat.count = Math.max(0, Math.min(cat.count + delta, max));\n    if (cat.count === 0) {\n      cat.doubled = false;\n      cat.playedBy = null;\n    }\n  \n    newScores[roundId][gameId] = player;\n    setScores(newScores);\n  };\n  \n\n  // Calculate score for playerIdx in a specific round and game\n  const calculateScore = (rId, gId, playerIdx) => {\n    let score = 0;\n    const player = scores[rId][gId][playerIdx];\n\n    for (const cat of categories) {\n      const { count, doubled } = player[cat.label];\n      switch (cat.label) {\n        case \"L6oosh\":\n          score += count * -15;\n          break;\n        case \"Diamonds\":\n          score += count * -10;\n          break;\n        case \"Queens\":\n          score += doubled ? count * -50 : count * -25;\n          break;\n        case \"King\":\n          score += doubled ? count * -150 : count * -75;\n          break;\n        default:\n          break;\n      }\n    }\n\n    scores[rId][gId].forEach((other, idx) => {\n      if (idx === playerIdx) return;\n      [\"Queens\", \"King\"].forEach((catName) => {\n        const { count, doubled, playedBy } = other[catName];\n        const bonus = catName === \"Queens\" ? 25 : 75;\n        if (doubled && playedBy === playerIdx) {\n          score += count * bonus;\n        }\n      });\n    });\n\n    return score;\n  };\n\n  // New: Calculate cumulative score for playerIdx across all rounds/games up to current\n  const calculateCumulativeScore = (playerIdx) => {\n    let totalScore = 0;\n\n    const sortedRounds = Object.keys(scores).sort((a, b) => parseInt(a) - parseInt(b));\n\n    for (const rId of sortedRounds) {\n      const games = scores[rId];\n      const sortedGames = Object.keys(games).sort((a, b) => parseInt(a) - parseInt(b));\n\n      for (const gId of sortedGames) {\n        if (\n          parseInt(rId) < parseInt(roundId) ||\n          (parseInt(rId) === parseInt(roundId) && parseInt(gId) <= parseInt(gameId))\n        ) {\n          totalScore += calculateScore(rId, gId, playerIdx);\n        }\n      }\n    }\n\n    return totalScore;\n  };\n\n  // For Score Sheet: gather all totals by round/game/player\n  const allScores = Object.entries(scores).flatMap(([rId, games]) =>\n    Object.entries(games).map(([gId, playerData]) => ({\n      round: rId,\n      game: gId,\n      totals: playerData.map((_, idx) => calculateScore(rId, gId, idx)),\n    }))\n  );\n\n  const goToNextGame = () => {\n    const currentRound = parseInt(roundId);\n    const currentGame = parseInt(gameId);\n  \n    if (currentGame === 1) {\n      // Go to Game 2 of the same round\n      navigate(`/round/${currentRound}/game/2`);\n    } else if (currentGame === 2 && currentRound < 4) {\n      // Go to Game 1 of the next round\n      navigate(`/round/${currentRound + 1}/game/1`);\n    } else {\n      // End of last game (Round 4 Game 2), maybe show a message or do nothing\n      alert(\"🎉 You've completed all rounds!\");\n    }\n  };\n  \n\n  return (\n    <div className=\"counter-page\">\n      <h2>\n        Round {roundId} - Game {gameId}\n      </h2>\n      <div className=\"players-grid\">\n        {roundScores.map((playerScore, i) => (\n          <div key={i} className=\"player-card\">\n            <input\n              className=\"name-input\"\n              value={names[i]}\n              onChange={(e) => handleNameChange(i, e.target.value)}\n            />\n            {categories.map((cat) => (\n              <div key={cat.label} className=\"controls\">\n                <span>{cat.icon}</span>\n                <button onClick={() => updateCount(i, cat.label, -1)}>-</button>\n                <span>{playerScore[cat.label].count}</span>\n                <button onClick={() => updateCount(i, cat.label, 1)}>+</button>\n              </div>\n            ))}\n            {/* Show cumulative total score here */}\n            <div className=\"score-display\">Total: {calculateCumulativeScore(i)}</div>\n          </div>\n        ))}\n      </div>\n\n      {modalInfo && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h3>{modalInfo.catLabel} Options</h3>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={modalInfo.doubled}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    doubled: e.target.checked,\n                    playedBy: e.target.checked ? 0 : null,\n                  })\n                }\n              />\n              Doubled?\n            </label>\n            {modalInfo.doubled && (\n              <select\n                value={modalInfo.playedBy}\n                onChange={(e) =>\n                  setModalInfo({\n                    ...modalInfo,\n                    playedBy: parseInt(e.target.value),\n                  })\n                }\n              >\n                {names.map((n, idx) => (\n                  <option key={idx} value={idx}>\n                    {n}\n                  </option>\n                ))}\n              </select>\n            )}\n            <button onClick={submitModal}>Confirm</button>\n            <button onClick={closeModal}>Cancel</button>\n          </div>\n        </div>\n      )}\n      <div style={{\n  position: \"fixed\",\n  top: 10,\n  right: 10,\n  backgroundColor: \"#222\",\n  color: \"#eee\",\n  padding: \"8px 12px\",\n  borderRadius: \"8px\",\n  fontSize: \"0.9rem\",\n  zIndex: 1000,\n  boxShadow: \"0 0 8px rgba(0,0,0,0.5)\"\n}}>\n  {Object.entries(cardsLeft()).map(([cat, count]) => (\n    <div key={cat} style={{ marginBottom: 4 }}>\n      {cat}: {count}\n    </div>\n  ))}\n</div>\n      <div\n        style={{\n          marginTop: \"20px\",\n          display: \"flex\",\n          gap: \"10px\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Link to={`/round/${roundId}`}>\n          <button className=\"back-btn\">← Back to Round {roundId}</button>\n        </Link>\n        <button onClick={goToNextGame}>→ Next Game</button>\n        <button onClick={() => setShowScoreSheet(true)}>📊 View Score Sheet</button>\n      </div>\n\n      {showScoreSheet && (\n        <div className=\"modal-overlay\">\n          <div\n            className=\"modal-content\"\n            style={{ maxWidth: \"90%\", overflowX: \"auto\" }}\n          >\n            <h3>Score Sheet</h3>\n            <table\n              style={{ width: \"100%\", color: \"#fff\", borderCollapse: \"collapse\" }}\n            >\n              <thead>\n  <tr>\n    <th>Game</th>\n    {names.map((n, idx) => (\n      <th key={idx}>{n}</th>\n    ))}\n  </tr>\n</thead>\n<tbody>\n  {allScores.map((entry, idx) => (\n    <tr key={idx}>\n      <td style={{ padding: \"4px 8px\" }}>\n        Round {entry.round} - Game {entry.game}\n      </td>\n      {entry.totals.map((score, i) => (\n        <td key={i} style={{ padding: \"4px 8px\" }}>{score}</td>\n      ))}\n    </tr>\n  ))}\n</tbody>\n\n            </table>\n            <button onClick={() => setShowScoreSheet(false)}>Close</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GameTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}